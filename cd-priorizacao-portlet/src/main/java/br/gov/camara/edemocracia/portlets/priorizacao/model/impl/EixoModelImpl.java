package br.gov.camara.edemocracia.portlets.priorizacao.model.impl;

import br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo;
import br.gov.camara.edemocracia.portlets.priorizacao.model.EixoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Eixo service. Represents a row in the &quot;PR_Eixo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.gov.camara.edemocracia.portlets.priorizacao.model.EixoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EixoImpl}.
 * </p>
 *
 * @author robson
 * @see EixoImpl
 * @see br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo
 * @see br.gov.camara.edemocracia.portlets.priorizacao.model.EixoModel
 * @generated
 */
public class EixoModelImpl extends BaseModelImpl<Eixo> implements EixoModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a eixo model instance should use the {@link br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo} interface instead.
     */
    public static final String TABLE_NAME = "PR_Eixo";
    public static final Object[][] TABLE_COLUMNS = {
            { "eixoId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "categoryId", Types.BIGINT },
            { "titulo", Types.VARCHAR },
            { "sumario", Types.VARCHAR },
            { "ordem", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table PR_Eixo (eixoId LONG not null primary key,companyId LONG,groupId LONG,categoryId LONG,titulo VARCHAR(3900) null,sumario VARCHAR(3900) null,ordem INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table PR_Eixo";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo"),
            true);
    public static long GROUPID_COLUMN_BITMASK = 1L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo"));
    private static ClassLoader _classLoader = Eixo.class.getClassLoader();
    private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
            Eixo.class
        };
    private long _eixoId;
    private long _companyId;
    private long _groupId;
    private long _originalGroupId;
    private boolean _setOriginalGroupId;
    private long _categoryId;
    private String _titulo;
    private String _sumario;
    private int _ordem;
    private long _columnBitmask;
    private Eixo _escapedModelProxy;

    public EixoModelImpl() {
    }

    public long getPrimaryKey() {
        return _eixoId;
    }

    public void setPrimaryKey(long primaryKey) {
        setEixoId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_eixoId);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return Eixo.class;
    }

    public String getModelClassName() {
        return Eixo.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("eixoId", getEixoId());
        attributes.put("companyId", getCompanyId());
        attributes.put("groupId", getGroupId());
        attributes.put("categoryId", getCategoryId());
        attributes.put("titulo", getTitulo());
        attributes.put("sumario", getSumario());
        attributes.put("ordem", getOrdem());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long eixoId = (Long) attributes.get("eixoId");

        if (eixoId != null) {
            setEixoId(eixoId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long categoryId = (Long) attributes.get("categoryId");

        if (categoryId != null) {
            setCategoryId(categoryId);
        }

        String titulo = (String) attributes.get("titulo");

        if (titulo != null) {
            setTitulo(titulo);
        }

        String sumario = (String) attributes.get("sumario");

        if (sumario != null) {
            setSumario(sumario);
        }

        Integer ordem = (Integer) attributes.get("ordem");

        if (ordem != null) {
            setOrdem(ordem);
        }
    }

    public long getEixoId() {
        return _eixoId;
    }

    public void setEixoId(long eixoId) {
        _eixoId = eixoId;
    }

    public long getCompanyId() {
        return _companyId;
    }

    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    public long getGroupId() {
        return _groupId;
    }

    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;

        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;

            _originalGroupId = _groupId;
        }

        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    public long getCategoryId() {
        return _categoryId;
    }

    public void setCategoryId(long categoryId) {
        _categoryId = categoryId;
    }

    public String getTitulo() {
        if (_titulo == null) {
            return StringPool.BLANK;
        } else {
            return _titulo;
        }
    }

    public void setTitulo(String titulo) {
        _titulo = titulo;
    }

    public String getSumario() {
        if (_sumario == null) {
            return StringPool.BLANK;
        } else {
            return _sumario;
        }
    }

    public void setSumario(String sumario) {
        _sumario = sumario;
    }

    public int getOrdem() {
        return _ordem;
    }

    public void setOrdem(int ordem) {
        _ordem = ordem;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Eixo.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Eixo toEscapedModel() {
        if (_escapedModelProxy == null) {
            _escapedModelProxy = (Eixo) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelProxyInterfaces,
                    new AutoEscapeBeanHandler(this));
        }

        return _escapedModelProxy;
    }

    @Override
    public Object clone() {
        EixoImpl eixoImpl = new EixoImpl();

        eixoImpl.setEixoId(getEixoId());
        eixoImpl.setCompanyId(getCompanyId());
        eixoImpl.setGroupId(getGroupId());
        eixoImpl.setCategoryId(getCategoryId());
        eixoImpl.setTitulo(getTitulo());
        eixoImpl.setSumario(getSumario());
        eixoImpl.setOrdem(getOrdem());

        eixoImpl.resetOriginalValues();

        return eixoImpl;
    }

    public int compareTo(Eixo eixo) {
        long primaryKey = eixo.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        Eixo eixo = null;

        try {
            eixo = (Eixo) obj;
        } catch (ClassCastException cce) {
            return false;
        }

        long primaryKey = eixo.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        EixoModelImpl eixoModelImpl = this;

        eixoModelImpl._originalGroupId = eixoModelImpl._groupId;

        eixoModelImpl._setOriginalGroupId = false;

        eixoModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Eixo> toCacheModel() {
        EixoCacheModel eixoCacheModel = new EixoCacheModel();

        eixoCacheModel.eixoId = getEixoId();

        eixoCacheModel.companyId = getCompanyId();

        eixoCacheModel.groupId = getGroupId();

        eixoCacheModel.categoryId = getCategoryId();

        eixoCacheModel.titulo = getTitulo();

        String titulo = eixoCacheModel.titulo;

        if ((titulo != null) && (titulo.length() == 0)) {
            eixoCacheModel.titulo = null;
        }

        eixoCacheModel.sumario = getSumario();

        String sumario = eixoCacheModel.sumario;

        if ((sumario != null) && (sumario.length() == 0)) {
            eixoCacheModel.sumario = null;
        }

        eixoCacheModel.ordem = getOrdem();

        return eixoCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{eixoId=");
        sb.append(getEixoId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", categoryId=");
        sb.append(getCategoryId());
        sb.append(", titulo=");
        sb.append(getTitulo());
        sb.append(", sumario=");
        sb.append(getSumario());
        sb.append(", ordem=");
        sb.append(getOrdem());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("br.gov.camara.edemocracia.portlets.priorizacao.model.Eixo");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>eixoId</column-name><column-value><![CDATA[");
        sb.append(getEixoId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>categoryId</column-name><column-value><![CDATA[");
        sb.append(getCategoryId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>titulo</column-name><column-value><![CDATA[");
        sb.append(getTitulo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sumario</column-name><column-value><![CDATA[");
        sb.append(getSumario());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ordem</column-name><column-value><![CDATA[");
        sb.append(getOrdem());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
