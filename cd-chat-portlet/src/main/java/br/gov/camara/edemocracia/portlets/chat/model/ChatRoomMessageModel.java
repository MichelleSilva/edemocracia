/**
 * Copyright (c) 2009-2014 Câmara dos Deputados. Todos os direitos reservados.
 *
 * e-Democracia é um software livre; você pode redistribuí-lo e/ou modificá-lo dentro
 * dos termos da Licença Pública Geral Menor GNU como publicada pela Fundação do 
 * Software Livre (FSF); na versão 2.1 da Licença, ou (na sua opinião) qualquer versão.
 *
 * Este programa é distribuído na esperança de que possa ser  útil, mas SEM NENHUMA GARANTIA;
 * sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR.
 * Veja a Licença Pública Geral Menor GNU para maiores detalhes. 
 */
package br.gov.camara.edemocracia.portlets.chat.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ChatRoomMessage service. Represents a row in the &quot;CDChat_ChatRoomMessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link br.gov.camara.edemocracia.portlets.chat.model.impl.ChatRoomMessageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link br.gov.camara.edemocracia.portlets.chat.model.impl.ChatRoomMessageImpl}.
 * </p>
 *
 * @author Ricardo Lima
 * @see ChatRoomMessage
 * @see br.gov.camara.edemocracia.portlets.chat.model.impl.ChatRoomMessageImpl
 * @see br.gov.camara.edemocracia.portlets.chat.model.impl.ChatRoomMessageModelImpl
 * @generated
 */
public interface ChatRoomMessageModel extends BaseModel<ChatRoomMessage> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a chat room message model instance should use the {@link ChatRoomMessage} interface instead.
     */

    /**
     * Returns the primary key of this chat room message.
     *
     * @return the primary key of this chat room message
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this chat room message.
     *
     * @param primaryKey the primary key of this chat room message
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the chat message ID of this chat room message.
     *
     * @return the chat message ID of this chat room message
     */
    public long getChatMessageId();

    /**
     * Sets the chat message ID of this chat room message.
     *
     * @param chatMessageId the chat message ID of this chat room message
     */
    public void setChatMessageId(long chatMessageId);

    /**
     * Returns the parent message ID of this chat room message.
     *
     * @return the parent message ID of this chat room message
     */
    public long getParentMessageId();

    /**
     * Sets the parent message ID of this chat room message.
     *
     * @param parentMessageId the parent message ID of this chat room message
     */
    public void setParentMessageId(long parentMessageId);

    /**
     * Returns the chat room ID of this chat room message.
     *
     * @return the chat room ID of this chat room message
     */
    public long getChatRoomId();

    /**
     * Sets the chat room ID of this chat room message.
     *
     * @param chatRoomId the chat room ID of this chat room message
     */
    public void setChatRoomId(long chatRoomId);

    /**
     * Returns the exported position of this chat room message.
     *
     * @return the exported position of this chat room message
     */
    public long getExportedPosition();

    /**
     * Sets the exported position of this chat room message.
     *
     * @param exportedPosition the exported position of this chat room message
     */
    public void setExportedPosition(long exportedPosition);

    /**
     * Returns the exported removed of this chat room message.
     *
     * @return the exported removed of this chat room message
     */
    public boolean getExportedRemoved();

    /**
     * Returns <code>true</code> if this chat room message is exported removed.
     *
     * @return <code>true</code> if this chat room message is exported removed; <code>false</code> otherwise
     */
    public boolean isExportedRemoved();

    /**
     * Sets whether this chat room message is exported removed.
     *
     * @param exportedRemoved the exported removed of this chat room message
     */
    public void setExportedRemoved(boolean exportedRemoved);

    /**
     * Returns the message type of this chat room message.
     *
     * @return the message type of this chat room message
     */
    public int getMessageType();

    /**
     * Sets the message type of this chat room message.
     *
     * @param messageType the message type of this chat room message
     */
    public void setMessageType(int messageType);

    /**
     * Returns the message status of this chat room message.
     *
     * @return the message status of this chat room message
     */
    public int getMessageStatus();

    /**
     * Sets the message status of this chat room message.
     *
     * @param messageStatus the message status of this chat room message
     */
    public void setMessageStatus(int messageStatus);

    /**
     * Returns the sender ID of this chat room message.
     *
     * @return the sender ID of this chat room message
     */
    public long getSenderId();

    /**
     * Sets the sender ID of this chat room message.
     *
     * @param senderId the sender ID of this chat room message
     */
    public void setSenderId(long senderId);

    /**
     * Returns the sender name of this chat room message.
     *
     * @return the sender name of this chat room message
     */
    @AutoEscape
    public String getSenderName();

    /**
     * Sets the sender name of this chat room message.
     *
     * @param senderName the sender name of this chat room message
     */
    public void setSenderName(String senderName);

    /**
     * Returns the sender u f of this chat room message.
     *
     * @return the sender u f of this chat room message
     */
    public long getSenderUF();

    /**
     * Sets the sender u f of this chat room message.
     *
     * @param senderUF the sender u f of this chat room message
     */
    public void setSenderUF(long senderUF);

    /**
     * Returns the sender email of this chat room message.
     *
     * @return the sender email of this chat room message
     */
    @AutoEscape
    public String getSenderEmail();

    /**
     * Sets the sender email of this chat room message.
     *
     * @param senderEmail the sender email of this chat room message
     */
    public void setSenderEmail(String senderEmail);

    /**
     * Returns the sender type of this chat room message.
     *
     * @return the sender type of this chat room message
     */
    public int getSenderType();

    /**
     * Sets the sender type of this chat room message.
     *
     * @param senderType the sender type of this chat room message
     */
    public void setSenderType(int senderType);

    /**
     * Returns the message text of this chat room message.
     *
     * @return the message text of this chat room message
     */
    @AutoEscape
    public String getMessageText();

    /**
     * Sets the message text of this chat room message.
     *
     * @param messageText the message text of this chat room message
     */
    public void setMessageText(String messageText);

    /**
     * Returns the text type of this chat room message.
     *
     * @return the text type of this chat room message
     */
    public int getTextType();

    /**
     * Sets the text type of this chat room message.
     *
     * @param textType the text type of this chat room message
     */
    public void setTextType(int textType);

    /**
     * Returns the message t s of this chat room message.
     *
     * @return the message t s of this chat room message
     */
    public Date getMessageTS();

    /**
     * Sets the message t s of this chat room message.
     *
     * @param messageTS the message t s of this chat room message
     */
    public void setMessageTS(Date messageTS);

    /**
     * Returns the message public of this chat room message.
     *
     * @return the message public of this chat room message
     */
    public boolean getMessagePublic();

    /**
     * Returns <code>true</code> if this chat room message is message public.
     *
     * @return <code>true</code> if this chat room message is message public; <code>false</code> otherwise
     */
    public boolean isMessagePublic();

    /**
     * Sets whether this chat room message is message public.
     *
     * @param messagePublic the message public of this chat room message
     */
    public void setMessagePublic(boolean messagePublic);

    /**
     * Returns the admin message of this chat room message.
     *
     * @return the admin message of this chat room message
     */
    public boolean getAdminMessage();

    /**
     * Returns <code>true</code> if this chat room message is admin message.
     *
     * @return <code>true</code> if this chat room message is admin message; <code>false</code> otherwise
     */
    public boolean isAdminMessage();

    /**
     * Sets whether this chat room message is admin message.
     *
     * @param adminMessage the admin message of this chat room message
     */
    public void setAdminMessage(boolean adminMessage);

    /**
     * Returns the recipient user ID of this chat room message.
     *
     * @return the recipient user ID of this chat room message
     */
    public long getRecipientUserId();

    /**
     * Sets the recipient user ID of this chat room message.
     *
     * @param recipientUserId the recipient user ID of this chat room message
     */
    public void setRecipientUserId(long recipientUserId);

    /**
     * Returns the recipient user uuid of this chat room message.
     *
     * @return the recipient user uuid of this chat room message
     * @throws SystemException if a system exception occurred
     */
    public String getRecipientUserUuid() throws SystemException;

    /**
     * Sets the recipient user uuid of this chat room message.
     *
     * @param recipientUserUuid the recipient user uuid of this chat room message
     */
    public void setRecipientUserUuid(String recipientUserUuid);

    /**
     * Returns the recipient user name of this chat room message.
     *
     * @return the recipient user name of this chat room message
     */
    @AutoEscape
    public String getRecipientUserName();

    /**
     * Sets the recipient user name of this chat room message.
     *
     * @param recipientUserName the recipient user name of this chat room message
     */
    public void setRecipientUserName(String recipientUserName);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(ChatRoomMessage chatRoomMessage);

    public int hashCode();

    public CacheModel<ChatRoomMessage> toCacheModel();

    public ChatRoomMessage toEscapedModel();

    public String toString();

    public String toXmlString();
}
