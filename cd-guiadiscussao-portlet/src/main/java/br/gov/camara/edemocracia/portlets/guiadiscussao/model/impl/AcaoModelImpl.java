/**
 * Copyright (c) 2009-2014 Câmara dos Deputados. Todos os direitos reservados.
 *
 * e-Democracia é um software livre; você pode redistribuí-lo e/ou modificá-lo dentro
 * dos termos da Licença Pública Geral Menor GNU como publicada pela Fundação do 
 * Software Livre (FSF); na versão 2.1 da Licença, ou (na sua opinião) qualquer versão.
 *
 * Este programa é distribuído na esperança de que possa ser  útil, mas SEM NENHUMA GARANTIA;
 * sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR.
 * Veja a Licença Pública Geral Menor GNU para maiores detalhes. 
 */
package br.gov.camara.edemocracia.portlets.guiadiscussao.model.impl;

import br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao;
import br.gov.camara.edemocracia.portlets.guiadiscussao.model.AcaoModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Acao service. Represents a row in the &quot;GD_Acao&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.gov.camara.edemocracia.portlets.guiadiscussao.model.AcaoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AcaoImpl}.
 * </p>
 *
 * @author Robson
 * @see AcaoImpl
 * @see br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao
 * @see br.gov.camara.edemocracia.portlets.guiadiscussao.model.AcaoModel
 * @generated
 */
public class AcaoModelImpl extends BaseModelImpl<Acao> implements AcaoModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a acao model instance should use the {@link br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao} interface instead.
     */
    public static final String TABLE_NAME = "GD_Acao";
    public static final Object[][] TABLE_COLUMNS = {
            { "acaoId", Types.BIGINT },
            { "faseId", Types.BIGINT },
            { "ordem", Types.INTEGER },
            { "texto", Types.VARCHAR },
            { "urlExterna", Types.BOOLEAN },
            { "urlLink", Types.VARCHAR },
            { "iconeId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table GD_Acao (acaoId LONG not null primary key,faseId LONG,ordem INTEGER,texto VARCHAR(75) null,urlExterna BOOLEAN,urlLink VARCHAR(300) null,iconeId LONG)";
    public static final String TABLE_SQL_DROP = "drop table GD_Acao";
    public static final String ORDER_BY_JPQL = " ORDER BY acao.ordem ASC";
    public static final String ORDER_BY_SQL = " ORDER BY GD_Acao.ordem ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao"),
            true);
    public static long FASEID_COLUMN_BITMASK = 1L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao"));
    private static ClassLoader _classLoader = Acao.class.getClassLoader();
    private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
            Acao.class
        };
    private long _acaoId;
    private long _faseId;
    private long _originalFaseId;
    private boolean _setOriginalFaseId;
    private int _ordem;
    private String _texto;
    private boolean _urlExterna;
    private String _urlLink;
    private long _iconeId;
    private long _columnBitmask;
    private Acao _escapedModelProxy;

    public AcaoModelImpl() {
    }

    public long getPrimaryKey() {
        return _acaoId;
    }

    public void setPrimaryKey(long primaryKey) {
        setAcaoId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_acaoId);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return Acao.class;
    }

    public String getModelClassName() {
        return Acao.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("acaoId", getAcaoId());
        attributes.put("faseId", getFaseId());
        attributes.put("ordem", getOrdem());
        attributes.put("texto", getTexto());
        attributes.put("urlExterna", getUrlExterna());
        attributes.put("urlLink", getUrlLink());
        attributes.put("iconeId", getIconeId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long acaoId = (Long) attributes.get("acaoId");

        if (acaoId != null) {
            setAcaoId(acaoId);
        }

        Long faseId = (Long) attributes.get("faseId");

        if (faseId != null) {
            setFaseId(faseId);
        }

        Integer ordem = (Integer) attributes.get("ordem");

        if (ordem != null) {
            setOrdem(ordem);
        }

        String texto = (String) attributes.get("texto");

        if (texto != null) {
            setTexto(texto);
        }

        Boolean urlExterna = (Boolean) attributes.get("urlExterna");

        if (urlExterna != null) {
            setUrlExterna(urlExterna);
        }

        String urlLink = (String) attributes.get("urlLink");

        if (urlLink != null) {
            setUrlLink(urlLink);
        }

        Long iconeId = (Long) attributes.get("iconeId");

        if (iconeId != null) {
            setIconeId(iconeId);
        }
    }

    public long getAcaoId() {
        return _acaoId;
    }

    public void setAcaoId(long acaoId) {
        _acaoId = acaoId;
    }

    public long getFaseId() {
        return _faseId;
    }

    public void setFaseId(long faseId) {
        _columnBitmask |= FASEID_COLUMN_BITMASK;

        if (!_setOriginalFaseId) {
            _setOriginalFaseId = true;

            _originalFaseId = _faseId;
        }

        _faseId = faseId;
    }

    public long getOriginalFaseId() {
        return _originalFaseId;
    }

    public int getOrdem() {
        return _ordem;
    }

    public void setOrdem(int ordem) {
        _columnBitmask = -1L;

        _ordem = ordem;
    }

    public String getTexto() {
        if (_texto == null) {
            return StringPool.BLANK;
        } else {
            return _texto;
        }
    }

    public void setTexto(String texto) {
        _texto = texto;
    }

    public boolean getUrlExterna() {
        return _urlExterna;
    }

    public boolean isUrlExterna() {
        return _urlExterna;
    }

    public void setUrlExterna(boolean urlExterna) {
        _urlExterna = urlExterna;
    }

    public String getUrlLink() {
        if (_urlLink == null) {
            return StringPool.BLANK;
        } else {
            return _urlLink;
        }
    }

    public void setUrlLink(String urlLink) {
        _urlLink = urlLink;
    }

    public long getIconeId() {
        return _iconeId;
    }

    public void setIconeId(long iconeId) {
        _iconeId = iconeId;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Acao.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Acao toEscapedModel() {
        if (_escapedModelProxy == null) {
            _escapedModelProxy = (Acao) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelProxyInterfaces,
                    new AutoEscapeBeanHandler(this));
        }

        return _escapedModelProxy;
    }

    @Override
    public Object clone() {
        AcaoImpl acaoImpl = new AcaoImpl();

        acaoImpl.setAcaoId(getAcaoId());
        acaoImpl.setFaseId(getFaseId());
        acaoImpl.setOrdem(getOrdem());
        acaoImpl.setTexto(getTexto());
        acaoImpl.setUrlExterna(getUrlExterna());
        acaoImpl.setUrlLink(getUrlLink());
        acaoImpl.setIconeId(getIconeId());

        acaoImpl.resetOriginalValues();

        return acaoImpl;
    }

    public int compareTo(Acao acao) {
        int value = 0;

        if (getOrdem() < acao.getOrdem()) {
            value = -1;
        } else if (getOrdem() > acao.getOrdem()) {
            value = 1;
        } else {
            value = 0;
        }

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        Acao acao = null;

        try {
            acao = (Acao) obj;
        } catch (ClassCastException cce) {
            return false;
        }

        long primaryKey = acao.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        AcaoModelImpl acaoModelImpl = this;

        acaoModelImpl._originalFaseId = acaoModelImpl._faseId;

        acaoModelImpl._setOriginalFaseId = false;

        acaoModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Acao> toCacheModel() {
        AcaoCacheModel acaoCacheModel = new AcaoCacheModel();

        acaoCacheModel.acaoId = getAcaoId();

        acaoCacheModel.faseId = getFaseId();

        acaoCacheModel.ordem = getOrdem();

        acaoCacheModel.texto = getTexto();

        String texto = acaoCacheModel.texto;

        if ((texto != null) && (texto.length() == 0)) {
            acaoCacheModel.texto = null;
        }

        acaoCacheModel.urlExterna = getUrlExterna();

        acaoCacheModel.urlLink = getUrlLink();

        String urlLink = acaoCacheModel.urlLink;

        if ((urlLink != null) && (urlLink.length() == 0)) {
            acaoCacheModel.urlLink = null;
        }

        acaoCacheModel.iconeId = getIconeId();

        return acaoCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{acaoId=");
        sb.append(getAcaoId());
        sb.append(", faseId=");
        sb.append(getFaseId());
        sb.append(", ordem=");
        sb.append(getOrdem());
        sb.append(", texto=");
        sb.append(getTexto());
        sb.append(", urlExterna=");
        sb.append(getUrlExterna());
        sb.append(", urlLink=");
        sb.append(getUrlLink());
        sb.append(", iconeId=");
        sb.append(getIconeId());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("br.gov.camara.edemocracia.portlets.guiadiscussao.model.Acao");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>acaoId</column-name><column-value><![CDATA[");
        sb.append(getAcaoId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>faseId</column-name><column-value><![CDATA[");
        sb.append(getFaseId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ordem</column-name><column-value><![CDATA[");
        sb.append(getOrdem());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>texto</column-name><column-value><![CDATA[");
        sb.append(getTexto());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>urlExterna</column-name><column-value><![CDATA[");
        sb.append(getUrlExterna());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>urlLink</column-name><column-value><![CDATA[");
        sb.append(getUrlLink());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>iconeId</column-name><column-value><![CDATA[");
        sb.append(getIconeId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
