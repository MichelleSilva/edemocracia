/**
 * Copyright (c) 2009-2014 Câmara dos Deputados. Todos os direitos reservados.
 *
 * e-Democracia é um software livre; você pode redistribuí-lo e/ou modificá-lo dentro
 * dos termos da Licença Pública Geral Menor GNU como publicada pela Fundação do 
 * Software Livre (FSF); na versão 2.1 da Licença, ou (na sua opinião) qualquer versão.
 *
 * Este programa é distribuído na esperança de que possa ser  útil, mas SEM NENHUMA GARANTIA;
 * sem uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR.
 * Veja a Licença Pública Geral Menor GNU para maiores detalhes. 
 */
package br.gov.camara.edemocracia.portlets.guiadiscussao.model.impl;

import br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase;
import br.gov.camara.edemocracia.portlets.guiadiscussao.model.FaseModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Fase service. Represents a row in the &quot;GD_Fase&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.gov.camara.edemocracia.portlets.guiadiscussao.model.FaseModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FaseImpl}.
 * </p>
 *
 * @author Robson
 * @see FaseImpl
 * @see br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase
 * @see br.gov.camara.edemocracia.portlets.guiadiscussao.model.FaseModel
 * @generated
 */
public class FaseModelImpl extends BaseModelImpl<Fase> implements FaseModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a fase model instance should use the {@link br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase} interface instead.
     */
    public static final String TABLE_NAME = "GD_Fase";
    public static final Object[][] TABLE_COLUMNS = {
            { "faseId", Types.BIGINT },
            { "configuracaoId", Types.BIGINT },
            { "ordem", Types.INTEGER },
            { "titulo", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table GD_Fase (faseId LONG not null primary key,configuracaoId LONG,ordem INTEGER,titulo VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table GD_Fase";
    public static final String ORDER_BY_JPQL = " ORDER BY fase.ordem ASC";
    public static final String ORDER_BY_SQL = " ORDER BY GD_Fase.ordem ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase"),
            true);
    public static long CONFIGURACAOID_COLUMN_BITMASK = 1L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase"));
    private static ClassLoader _classLoader = Fase.class.getClassLoader();
    private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
            Fase.class
        };
    private long _faseId;
    private long _configuracaoId;
    private long _originalConfiguracaoId;
    private boolean _setOriginalConfiguracaoId;
    private int _ordem;
    private String _titulo;
    private long _columnBitmask;
    private Fase _escapedModelProxy;

    public FaseModelImpl() {
    }

    public long getPrimaryKey() {
        return _faseId;
    }

    public void setPrimaryKey(long primaryKey) {
        setFaseId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_faseId);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return Fase.class;
    }

    public String getModelClassName() {
        return Fase.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("faseId", getFaseId());
        attributes.put("configuracaoId", getConfiguracaoId());
        attributes.put("ordem", getOrdem());
        attributes.put("titulo", getTitulo());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long faseId = (Long) attributes.get("faseId");

        if (faseId != null) {
            setFaseId(faseId);
        }

        Long configuracaoId = (Long) attributes.get("configuracaoId");

        if (configuracaoId != null) {
            setConfiguracaoId(configuracaoId);
        }

        Integer ordem = (Integer) attributes.get("ordem");

        if (ordem != null) {
            setOrdem(ordem);
        }

        String titulo = (String) attributes.get("titulo");

        if (titulo != null) {
            setTitulo(titulo);
        }
    }

    public long getFaseId() {
        return _faseId;
    }

    public void setFaseId(long faseId) {
        _faseId = faseId;
    }

    public long getConfiguracaoId() {
        return _configuracaoId;
    }

    public void setConfiguracaoId(long configuracaoId) {
        _columnBitmask |= CONFIGURACAOID_COLUMN_BITMASK;

        if (!_setOriginalConfiguracaoId) {
            _setOriginalConfiguracaoId = true;

            _originalConfiguracaoId = _configuracaoId;
        }

        _configuracaoId = configuracaoId;
    }

    public long getOriginalConfiguracaoId() {
        return _originalConfiguracaoId;
    }

    public int getOrdem() {
        return _ordem;
    }

    public void setOrdem(int ordem) {
        _columnBitmask = -1L;

        _ordem = ordem;
    }

    public String getTitulo() {
        if (_titulo == null) {
            return StringPool.BLANK;
        } else {
            return _titulo;
        }
    }

    public void setTitulo(String titulo) {
        _titulo = titulo;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Fase.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Fase toEscapedModel() {
        if (_escapedModelProxy == null) {
            _escapedModelProxy = (Fase) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelProxyInterfaces,
                    new AutoEscapeBeanHandler(this));
        }

        return _escapedModelProxy;
    }

    @Override
    public Object clone() {
        FaseImpl faseImpl = new FaseImpl();

        faseImpl.setFaseId(getFaseId());
        faseImpl.setConfiguracaoId(getConfiguracaoId());
        faseImpl.setOrdem(getOrdem());
        faseImpl.setTitulo(getTitulo());

        faseImpl.resetOriginalValues();

        return faseImpl;
    }

    public int compareTo(Fase fase) {
        int value = 0;

        if (getOrdem() < fase.getOrdem()) {
            value = -1;
        } else if (getOrdem() > fase.getOrdem()) {
            value = 1;
        } else {
            value = 0;
        }

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        Fase fase = null;

        try {
            fase = (Fase) obj;
        } catch (ClassCastException cce) {
            return false;
        }

        long primaryKey = fase.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        FaseModelImpl faseModelImpl = this;

        faseModelImpl._originalConfiguracaoId = faseModelImpl._configuracaoId;

        faseModelImpl._setOriginalConfiguracaoId = false;

        faseModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Fase> toCacheModel() {
        FaseCacheModel faseCacheModel = new FaseCacheModel();

        faseCacheModel.faseId = getFaseId();

        faseCacheModel.configuracaoId = getConfiguracaoId();

        faseCacheModel.ordem = getOrdem();

        faseCacheModel.titulo = getTitulo();

        String titulo = faseCacheModel.titulo;

        if ((titulo != null) && (titulo.length() == 0)) {
            faseCacheModel.titulo = null;
        }

        return faseCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{faseId=");
        sb.append(getFaseId());
        sb.append(", configuracaoId=");
        sb.append(getConfiguracaoId());
        sb.append(", ordem=");
        sb.append(getOrdem());
        sb.append(", titulo=");
        sb.append(getTitulo());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("br.gov.camara.edemocracia.portlets.guiadiscussao.model.Fase");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>faseId</column-name><column-value><![CDATA[");
        sb.append(getFaseId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>configuracaoId</column-name><column-value><![CDATA[");
        sb.append(getConfiguracaoId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ordem</column-name><column-value><![CDATA[");
        sb.append(getOrdem());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>titulo</column-name><column-value><![CDATA[");
        sb.append(getTitulo());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
